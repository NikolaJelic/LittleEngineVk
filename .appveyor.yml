version: 0.0.0.{build}

image:
  - Visual Studio 2019
  - Ubuntu2004

configuration:
  - Release

install:
- cmd: >-
    if not exist VulkanSDK.exe curl -L --silent --show-error --output VulkanSDK.exe https://vulkan.lunarg.com/sdk/download/1.2.141.2/windows/VulkanSDK-1.2.141.2-Installer.exe?Human=true

    VulkanSDK.exe /S

- sh: >-
    [ ! -f vulkan_sdk.tar.gz ] && wget https://vulkan.lunarg.com/sdk/download/1.2.141.2/linux/vulkansdk-linux-x86_64-1.2.141.2.tar.gz?Human=true -O vulkan_sdk.tar.gz

    sudo mkdir -p /vulkan_sdk; sudo tar -xf vulkan_sdk.tar.gz -C /vulkan_sdk; sudo chmod -R a+r /vulkan_sdk; echo VULKAN_SDK: $VULKAN_SDK

    sudo apt update && sudo apt install -y xorg-dev x11-xserver-utils clang

before_build:
- cmd: >-
    set "PATH=%VULKAN_SDK%/source/Vulkan-Headers/include;%VULKAN_SDK%/lib;%VULKAN_SDK%/bin;%PATH%"

    cmake -G "Visual Studio 16 2019" . -B out

- sh: cmake -G Ninja . -B out -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=$CONFIGURATION || exit 1

for:
-
  matrix:
    only:
      - image: Visual Studio 2019
  environment:
    VULKAN_SDK: C:/VulkanSDK/1.2.141.2
    VK_LAYER_PATH: "$VULKAN_SDK/etc/vulkan/explicit_layer.d"
  build:
    project: out/LittleEngineVk.sln
    parallel: true
    verbosity: minimal
  cache:
  - VulkanSDK.exe

-
  matrix:
    only:
      - image: Ubuntu2004
  environment:
    VULKAN_SDK: /vulkan_sdk/1.2.141.2/x86_64
    VK_LAYER_PATH: "$VULKAN_SDK/etc/vulkan/explicit_layer.d"
  build_script:
  - . vk_setup_env.sh; ninja -v -C out || exit 1
  cache:
  - vulkan_sdk.tar.gz

matrix:
  fast_finish: true
